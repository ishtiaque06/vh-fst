Welcome to VH FST's documentation!
==================================
This project (Vowel Harmony Finite State Transducer) reflects a computational
approach to vowel harmony patterns in natural languages. The finite state
transducer (FST) used in this project is designed to be able generate expected
pronunciations of words in a certain set of vowel harmony patterns.
Many of the represented languages and their vowel-harmony
patterns are described in Andrew Nevins' book
`Locality in Vowel Harmony
<https://mitpress.mit.edu/books/locality-vowel-harmony>`_.

This project is the collaborative Summer 2019 effort of Travis Herringshaw and Ahmed Ishtiaque,
under the supervision of Professor Jane Chandlee at Haverford College.

So far, the following vowel-harmony patterns have been recorded:

1. Kisa applicative suffix Vlɑ
2. Kisa reversative suffix Vlɑ
3. Sibe vowel rounding harmony
4. Tuvan backness harmony
5. Uyghur backness harmony
6. Uyghur plural suffix -lVr
7. Uyghur dative suffix -ʁV
8. Halh (Mongolic) rounding harmony
9. Jingulu nominal root with non-neuter gender suffix
10. Jingulu adjectivial root with non-neuter gender suffix
11. Jingulu verbal root with subject agreement-marking suffix
12. Jingulu verbal root with motion-imperative suffix
13. Jingulu verbal root with negative imperative suffix
14. Turkish palatal and rounding vowel harmony
15. Finnish palatal (front/back) vowel harmony
16. Classical Mongolian palatal vowel harmony
17. Kalmyk (Oirat) harmony
18. Khalkha Mongolian harmony
19. Dagur Mongolian harmony
20. Tunica harmony
21. Yoruba ATR harmony
22. Igbo ATR harmony
23. Diola-Fogny (Jola-Fonyi) ATR harmony
24. Kalenjin ATR harmony
25. Asturian Lena (Romance) height harmony with inflectional suffixes
26. Pasiego vowel harmony (metaphony, raising, and centralization)
27. Pulaar dialect of Fula (Niger-Congo) ATR harmony
28. Maasai (Eastern Nilotic) ATR harmony
29. Kashaya (Pomoan) translaryngeal harmony
30. Standard Hungarian palatal harmony of alternating suffixes
31. Nawuri (North Guang) ATR harmony
32. Kinendeule (Rufiji) height harmony for verbal extensions
33. Chingoni (Rufiji) height harmony for verbal extensions

Components
----------

Dataset
+++++++

The core component of this project is the dataset that Travis has put together.
This dataset is present in :code:`vh_patterns_dataset.py` file in the root of the
project. Since it's a Python Dictionary data structure, programmatic interaction
with it is fairly straightforward.

The dataset represents states, alphabets, transitions and other details about
the languages added. More details can be found in the :doc:`templates/develop`
section.

FST
+++

The FST class is fairly simple. On initialization, it loads a language (as specified
by its number in :code:`vh_patterns_dataset` ) and its properties into the instance.
Then it provides a :code:`step` method which, given a word represented as a list,
runs the FST and returns an output word represented as a list according to the transitions
defined. More details on how it works are in the :doc:`templates/develop` sction.

Command-Line Tool
+++++++++++++++++

To make the dataset and the FST accessible to a user, this project also comes with a
command-line tool. The command-line tool does several things:

* Presents an option to the user to select a VH pattern to work with.
* Once a VH pattern is selected, the user can enter space-delimited words into the interface
  to get an output word that is expected to be generated by the FST corresponding
  to the VH pattern.
* It also provides a help menu that instructs the user on how to interact with the tool.

Utilities
+++++++++

There are several utilities that revolve around this project to make it more useful
to phonologists. These utilities are present in the :code:`utils.py` file.

:code:`utils.py` can be run as a command itself (eg. :code:`python3 utils.py`).
It supports one argument: :code:`generate_all`,
which generates pictorial FST representations of all the VH patterns currently
present in the dataset, and stores the output SVG images in the :code:`illustrations`
folder.

Contents
--------
.. toctree::
   :maxdepth: 2

   templates/setup
   templates/usage
   templates/unicodevars
   templates/utilities
   templates/sources
   templates/test
   templates/develop
   templates/credits
